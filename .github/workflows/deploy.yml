name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - "fusian-web/**"
      - ".github/workflows/deploy.yml"
      - ".github/workflows/build.yml"
  workflow_dispatch:
    inputs:
      additional_build_env:
        description: 'e.g. Feature flags like "FEATURE_AUDITION=true FEATURE_STH=false"'
        default: ""
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  setup:
    runs-on: ubuntu-latest
    environment:
      name: prod
    outputs:
      build_env: ${{ steps.save-env.outputs.build_env }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Save build env config
        id: save-env
        run: |
          # use either the input or if empty, the last saved env var
          newConfig="${{inputs.additional_build_env || vars.LAST_DEPLOY_ENV}}"
          # if the new config is "DELETE", we clear the saved config
          if [ "$newConfig" == "DELETE" ]; then
            newConfig=""
          fi

          # only save if it has changed
          if [ "${{ vars.LAST_DEPLOY_ENV }}" != "$newConfig" ]; then
            echo "💾 Saving additional build environment variables for future deployments: $newConfig"
            gh variable set LAST_DEPLOY_ENV --body "$newConfig" --env ${{github.environment}}
          fi
          echo "build_env=$newConfig" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  build:
    needs: setup
    uses: ./.github/workflows/build.yml
    with:
      static_export: true
      additional_build_env: ${{ needs.setup.outputs.build_env }}

  deploy:
    runs-on: ubuntu-latest
    needs: [setup, build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: static-export
          path: ./out

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y.%m.%d')-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Create deployment summary
        run: |
          echo "# 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deployment URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ needs.setup.outputs.build_env }}" ]; then
            echo "## 🎛️ Additional Build Environment Variables Used" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "${{ needs.setup.outputs.build_env }}" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          make_latest: "true"
          generate_release_notes: true
          body: |
            🚀 Deployed to GitHub Pages

            Feature Flags: ${{ needs.setup.outputs.build_env || 'defaults' }}
