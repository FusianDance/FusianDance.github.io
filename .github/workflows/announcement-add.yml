name: Add Announcement

on:
  workflow_dispatch:
    inputs:
      title:
        description: "Announcement Title"
        required: true
        type: string
      content:
        description: "Announcement Content"
        required: true
        type: string
      unixtimestamp:
        description: "Unix Timestamp (leave empty for current time)"
        required: false
        type: string

jobs:
  add-announcement:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set timestamp
        id: timestamp
        run: |
          if [ -z "${{ github.event.inputs.unixtimestamp }}" ]; then
            # if no timestamp is provided, use current time
            echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
          else
            echo "timestamp=${{ github.event.inputs.unixtimestamp }}" >> $GITHUB_OUTPUT
          fi

      - name: Add to JSON
        run: |
          cd fusian-web/public
          timestamp=${{ steps.timestamp.outputs.timestamp }}
          # Use node to safely read/modify/write JSON. Pass values as argv to avoid shell-escaping issues.
          node -e "const fs=require('fs');const p='announcements.json';let data=[];try{data=JSON.parse(fs.readFileSync(p,'utf8'))}catch(e){}const title=process.argv[1]||'';const content=process.argv[2]||'';const unixtimestamp=Number(process.argv[3]) * 1000;const entry={id:String(data.length),title,content,unixtimestamp};data.push(entry);fs.writeFileSync(p,JSON.stringify(data,null,2),'utf8');" -- "${{ github.event.inputs.title }}" "${{ github.event.inputs.content }}" "$timestamp"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add announcement: ${{ github.event.inputs.title }}"
          title: "Add announcement: ${{ github.event.inputs.title }}"
          body: |
            ## New Announcement Added

            **Title:** ${{ github.event.inputs.title }}
            **Content:** ${{ github.event.inputs.content }}
            **Timestamp:** ${{ steps.timestamp.outputs.timestamp }}

            This PR was automatically created by the Add Announcement workflow.
          branch: "add-announcement-${{ steps.timestamp.outputs.timestamp }}"
          delete-branch: true
